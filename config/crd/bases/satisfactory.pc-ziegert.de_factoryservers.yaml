---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.9.2
  creationTimestamp: null
  name: factoryservers.satisfactory.pc-ziegert.de
spec:
  group: satisfactory.pc-ziegert.de
  names:
    kind: FactoryServer
    listKind: FactoryServerList
    plural: factoryservers
    singular: factoryserver
  scope: Namespaced
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: FactoryServer is the Schema for the factoryServers API
        properties:
          apiVersion:
            description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
            type: string
          kind:
            description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
            type: string
          metadata:
            type: object
          spec:
            description: FactoryServerSpec defines the desired state of FactoryServe
            properties:
              autopause:
                default: false
                description: Autopause
                type: boolean
              autosaveInterval:
                default: 300
                description: Interval
                format: int64
                type: integer
              autosaveNum:
                default: 5
                description: Num
                format: int64
                type: integer
              autosaveOnDisconnect:
                default: true
                description: OnDisconnect
                type: boolean
              beta:
                default: false
                description: Beta
                type: boolean
              crashReport:
                default: false
                description: CrashReport
                type: boolean
              debug:
                default: false
                description: Debug
                type: boolean
              disableSeasonalEvents:
                default: false
                description: DisableSeasonalEvents
                type: boolean
              image:
                default: wolveix/satisfactory-server:latest
                description: Image
                type: string
              maxplayers:
                default: 4
                description: Maxplayers
                format: int64
                type: integer
              networkquality:
                default: 3
                description: Networkquality
                format: int64
                type: integer
              portBeacon:
                default: 15000
                description: Beacon
                format: int32
                maximum: 65535
                minimum: 1
                type: integer
              portGame:
                default: 7777
                description: Game
                format: int32
                maximum: 65535
                minimum: 1
                type: integer
              portQuery:
                default: 15777
                description: Query
                format: int32
                maximum: 65535
                minimum: 1
                type: integer
              serviceLoadBalancerClass:
                description: LoadBalancerClass
                type: string
              serviceLoadBalancerSourceRanges:
                description: LoadBalancerSourceRanges
                items:
                  type: string
                type: array
              serviceNodePortBeacon:
                default: 15000
                description: Beacon
                format: int32
                maximum: 65535
                minimum: 1
                type: integer
              serviceNodePortGame:
                default: 7777
                description: Game
                format: int32
                maximum: 65535
                minimum: 1
                type: integer
              serviceNodePortQuery:
                default: 15777
                description: Query
                format: int32
                maximum: 65535
                minimum: 1
                type: integer
              serviceType:
                default: ClusterIP
                description: Type
                enum:
                - ClusterIP
                - NodePort
                - LoadBalancer
                type: string
              size:
                default: 1
                description: Size is the size of the FactoryServer StatefulSet
                format: int32
                maximum: 1
                minimum: 0
                type: integer
              skipUpdate:
                default: false
                description: SkipUpdate
                type: boolean
              storageClass:
                description: StorageClassName is the size of the FactoryServer StatefulSet
                type: string
              storageRequests:
                default: 50Gi
                description: StorageClassName is the size of the FactoryServer StatefulSet
                type: string
            type: object
          status:
            description: FactoryServerStatus defines the observed state of FactoryServer
            properties:
              conditions:
                description: Conditions stors the status conditions of the FactoryServer
                  instances
                items:
                  description: "Condition contains details for one aspect of the current
                    state of this API Resource. --- This struct is intended for direct
                    use as an array at the field path .status.conditions.  For example,
                    type FooStatus struct{ // Represents the observations of a foo's
                    current state. // Known .status.conditions.type are: \"Available\",
                    \"Progressing\", and \"Degraded\" // +patchMergeKey=type // +patchStrategy=merge
                    // +listType=map // +listMapKey=type Conditions []metav1.Condition
                    `json:\"conditions,omitempty\" patchStrategy:\"merge\" patchMergeKey:\"type\"
                    protobuf:\"bytes,1,rep,name=conditions\"` \n // other fields }"
                  properties:
                    lastTransitionTime:
                      description: lastTransitionTime is the last time the condition
                        transitioned from one status to another. This should be when
                        the underlying condition changed.  If that is not known, then
                        using the time when the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: message is a human readable message indicating
                        details about the transition. This may be an empty string.
                      maxLength: 32768
                      type: string
                    observedGeneration:
                      description: observedGeneration represents the .metadata.generation
                        that the condition was set based upon. For instance, if .metadata.generation
                        is currently 12, but the .status.conditions[x].observedGeneration
                        is 9, the condition is out of date with respect to the current
                        state of the instance.
                      format: int64
                      minimum: 0
                      type: integer
                    reason:
                      description: reason contains a programmatic identifier indicating
                        the reason for the condition's last transition. Producers
                        of specific condition types may define expected values and
                        meanings for this field, and whether the values are considered
                        a guaranteed API. The value should be a CamelCase string.
                        This field may not be empty.
                      maxLength: 1024
                      minLength: 1
                      pattern: ^[A-Za-z]([A-Za-z0-9_,:]*[A-Za-z0-9_])?$
                      type: string
                    status:
                      description: status of the condition, one of True, False, Unknown.
                      enum:
                      - "True"
                      - "False"
                      - Unknown
                      type: string
                    type:
                      description: type of condition in CamelCase or in foo.example.com/CamelCase.
                        --- Many .condition.type values are consistent across resources
                        like Available, but because arbitrary conditions can be useful
                        (see .node.status.conditions), the ability to deconflict is
                        important. The regex it matches is (dns1123SubdomainFmt/)?(qualifiedNameFmt)
                      maxLength: 316
                      pattern: ^([a-z0-9]([-a-z0-9]*[a-z0-9])?(\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*/)?(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])$
                      type: string
                  required:
                  - lastTransitionTime
                  - message
                  - reason
                  - status
                  - type
                  type: object
                type: array
              nodes:
                description: Nodes are the names of the factoryServer pods
                items:
                  type: string
                type: array
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
